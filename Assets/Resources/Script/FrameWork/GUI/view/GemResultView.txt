autoImport("GemResultCell")
GemResultView = class("GemResultView", BaseView)
GemResultView.ViewType = UIViewType.PopUpLayer
local cellWidth = 170
local tipOffset = {0, 0}

function GemResultView:Init()
  self.grid = self:FindComponent("Grid", UIGrid)
  self.gridTrans = self.grid.transform
  self.normalStick = self:FindComponent("NormalStick", UIWidget)
  local viewData = self.viewdata.viewdata
  if not viewData or not next(viewData) then
    LogUtility.Error("Cannot get viewdata while initializing GemResultView!")
    return
  end
  self.isShowFuncBtns = viewData.isShowFuncBtns
  local data = viewData.data
  if not data or type(data) ~= "table" or not next(data) then
    LogUtility.Error("Cannot get gem data to show while initializing GemResultView!")
    return
  end
  table.sort(data, function(l, r)
    l = GemProxy.GetSkillQualityFromItemData(l) or 0
    r = GemProxy.GetSkillQualityFromItemData(r) or 0
    return l > r
  end)
  if #data <= 5 then
    self.grid.pivot = UIWidget.Pivot.Center
    self.gridTrans.localPosition = LuaVector3.zero
  else
    self.grid.pivot = UIWidget.Pivot.Left
    self.gridTrans.localPosition = LuaGeometry.GetTempVector3(-2 * cellWidth, 0, 0)
  end
  self.listCtrl = UIGridListCtrl.new(self.grid, GemResultCell, "GemResultCell")
  self.listCtrl:AddEventListener(MouseEvent.MouseClick, self.ShowGemTip, self)
end

function GemResultView:OnEnter()
  GemResultView.super.OnEnter(self)
  self.listCtrl:ResetDatas(self.viewdata.viewdata.data, nil, false)
  LeanTween.delayedCall(self.gameObject, 0.25, function()
    if self.listCtrl then
      self.listCtrl:Layout()
    end
  end)
end

function GemResultView:OnExit()
  LeanTween.cancel(self.gameObject)
  GemResultView.super.OnExit(self)
end

function GemResultView:ShowGemTip(cellCtl)
  local go = cellCtl.gameObject
  if not go then
    return
  end
  local tempV3 = LuaGeometry.GetTempVector3(LuaGameObject.GetPosition(go.transform))
  local isGoRight
  if tempV3.x == 0 then
    isGoRight = 1
  else
    isGoRight = tempV3.x / math.abs(tempV3.x)
  end
  tempV3.x = -isGoRight * 0.8 + tempV3.x
  tempV3.y = 0
  self.normalStick.gameObject.transform.position = tempV3
  GemCell.ShowGemTip(cellCtl.gameObject, cellCtl.data, self.normalStick, 0 < isGoRight and NGUIUtil.AnchorSide.Left or NGUIUtil.AnchorSide.Right, tipOffset, nil, self.isShowFuncBtns)
end
